import streamlit as st
import uuid
from datetime import datetime
from auth import check_password, carregar_assinaturas, salvar_assinaturas
from utils import carregar_lembretes, salvar_lembretes

# 1. VERIFICA√á√ÉO DE LOGIN: Padr√£o de seguran√ßa do projeto
if not check_password():
    st.stop()

username = st.session_state.get("username")

st.set_page_config(page_title="Meus Lembretes", layout="centered")
st.title("‚è∞ Meus Lembretes")

# --- Bot√£o de voltar para o chat principal ---
with st.container():
    col1, col2 = st.columns([0.85, 0.15])
    with col2:
        if st.button("‚¨ÖÔ∏è Voltar", use_container_width=True):
            st.switch_page("app.py")

# Carrega os lembretes do usu√°rio logado
try:
    lembretes = carregar_lembretes(username)
except Exception as e:
    st.error(f"Ocorreu um erro ao carregar seus lembretes. Tente recarregar a p√°gina. Erro: {e}")
    lembretes = []

# --- FORMUL√ÅRIO PARA ADICIONAR NOVO LEMBRETE ---
st.subheader("‚úçÔ∏è Adicionar Novo Lembrete")
with st.form("novo_lembrete_form", clear_on_submit=True):
    novo_titulo = st.text_input("T√≠tulo do lembrete")
    nova_descricao = st.text_area("Descri√ß√£o (opcional)")
    
    col_data, col_hora = st.columns(2)
    with col_data:
        nova_data = st.date_input("Data do Lembrete", min_value=datetime.today())
    with col_hora:
        novo_horario = st.time_input("Hor√°rio do Lembrete")

    submit_novo = st.form_submit_button("Salvar Lembrete", type="primary", use_container_width=True)

    if submit_novo:
        if not novo_titulo:
            st.warning("O t√≠tulo √© obrigat√≥rio.")
        else:
            data_hora_lembrete = datetime.combine(nova_data, novo_horario)
            
            novo_lembrete = {
                "id": str(uuid.uuid4()),
                "titulo": novo_titulo,
                "descricao": nova_descricao,
                "data_lembrete": data_hora_lembrete.strftime("%Y-%m-%d %H:%M:%S"),
                "status": "pendente",
                "notificacao_enviada": False,
                "criado_em": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            }
            lembretes.append(novo_lembrete)
            salvar_lembretes(username, lembretes)
            st.success(f"Lembrete '{novo_titulo}' adicionado com sucesso!")
            st.rerun()

st.divider()

# --- EXIBIR LEMBRETES EXISTENTES ---
st.subheader("üóìÔ∏è Seus Lembretes")

if not lembretes:
    st.info("Voc√™ ainda n√£o tem nenhum lembrete cadastrado. Use o formul√°rio acima para come√ßar!")
else:
    # Ordena os lembretes por data (mais pr√≥ximos primeiro)
    lembretes_ordenados = sorted(lembretes, key=lambda x: x['data_lembrete'])

    for lembrete in lembretes_ordenados:
        data_lembrete_dt = datetime.strptime(lembrete['data_lembrete'], "%Y-%m-%d %H:%M:%S")

        with st.container(border=True):
            col_info, col_acoes = st.columns([0.8, 0.2])
            
            with col_info:
                st.markdown(f"**{lembrete['titulo']}**")
                st.caption(f"Lembrar em: {data_lembrete_dt.strftime('%d/%m/%Y √†s %H:%M')}")
                if lembrete['descricao']:
                    with st.expander("Ver descri√ß√£o"):
                        st.write(lembrete['descricao'])
            
            with col_acoes:
                # Bot√£o para Editar (usando popover)
                with st.popover("‚úèÔ∏è Editar", use_container_width=True):
                    with st.form(f"form_edit_{lembrete['id']}"):
                        st.write(f"Editando: **{lembrete['titulo']}**")
                        titulo_edit = st.text_input("T√≠tulo", value=lembrete['titulo'], key=f"titulo_{lembrete['id']}")
                        descricao_edit = st.text_area("Descri√ß√£o", value=lembrete['descricao'], key=f"desc_{lembrete['id']}")
                        
                        data_edit = st.date_input("Data", value=data_lembrete_dt.date(), key=f"data_{lembrete['id']}", min_value=datetime.today())
                        hora_edit = st.time_input("Hor√°rio", value=data_lembrete_dt.time(), key=f"hora_{lembrete['id']}")
                        
                        if st.form_submit_button("Salvar Altera√ß√µes", type="primary"):
                            data_hora_editada = datetime.combine(data_edit, hora_edit)
                            # Atualiza o lembrete na lista original
                            lembrete['titulo'] = titulo_edit
                            lembrete['descricao'] = descricao_edit
                            lembrete['data_lembrete'] = data_hora_editada.strftime("%Y-%m-%d %H:%M:%S")
                            lembrete['notificacao_enviada'] = False # Reseta a notifica√ß√£o ao editar
                            
                            salvar_lembretes(username, lembretes)
                            st.success("Lembrete atualizado!")
                            st.rerun()

                # Bot√£o para Excluir
                if st.button("üóëÔ∏è Excluir", key=f"del_{lembrete['id']}", use_container_width=True):
                    lembretes_filtrados = [l for l in lembretes if l['id'] != lembrete['id']]
                    salvar_lembretes(username, lembretes_filtrados)
                    st.success(f"Lembrete '{lembrete['titulo']}' exclu√≠do.")
                    st.rerun()

# --- CONFIGURA√á√ÉO DE E-MAIL (B√îNUS) ---
# Esta se√ß√£o permite que o usu√°rio use o e-mail j√° cadastrado na assinatura.
st.divider()
with st.expander("‚öôÔ∏è Configura√ß√µes de Notifica√ß√£o"):
    assinaturas = carregar_assinaturas()
    dados_usuario = assinaturas.get(username)
    if dados_usuario:
        email_atual = dados_usuario.get("email")
        st.info(f"As notifica√ß√µes ser√£o enviadas para o e-mail: **{email_atual}**")
        st.caption("Este e-mail √© gerenciado pelo administrador na p√°gina de assinaturas.")
    else:
        st.warning("N√£o foi poss√≠vel carregar seu e-mail de notifica√ß√£o.")